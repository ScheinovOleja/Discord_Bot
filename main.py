import discord
from discord.ext.commands import Bot

from create_db import database, InfoOnUsers, Helmets, Armours, Boots, Weapons, Mobs
from settings import settings


class RpgBot:

    def __init__(self, token):
        database.connect()
        database.create_tables([InfoOnUsers, Helmets, Armours, Boots, Weapons, Mobs])
        self.emojis = ['‚öî', 'üòÄ', 'üòÑ', 'üòá']
        self.all_members = []
        self.roles = {}
        self.token = token
        self.bot = Bot(command_prefix='/', intents=discord.Intents.all())
        self.prepare_clients()

    def run(self):
        self.bot.run(self.token)

    def prepare_clients(self):

        async def check_to_channel(message):
            if message.channel.name == '–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ' and message.author != self.bot.user:
                await message.channel.purge(limit=1)
                return True

        def add_user_to_db(member):
            user_data = [{'name': member.name + member.discriminator,
                          'user_id_discord': member.id,
                          'experience': 0,
                          'money': 10,
                          'helmet': 1,
                          'armour': 1,
                          'boots': 1,
                          'weapon': 1}]
            InfoOnUsers.insert_many(user_data).execute()

        @self.bot.event
        async def on_ready():
            for role in self.bot.guilds[0].roles:
                if role.id == 768484322944352296 or role.id == 770550789345247234:
                    continue
                else:
                    self.roles[role.name] = role
            print(f'–í—ã –≤–æ—à–ª–∏ –∫–∞–∫ {self.bot.user}!')
            print(f'–°–ø–∏—Å–æ–∫ —Ä–æ–ª–µ–π - {self.roles}')

        @self.bot.event
        async def on_member_join(member):
            check = False
            add_user_to_db(member)
            guild = member.guild
            user_id = member.id
            if guild.system_channel is not None:
                await guild.system_channel.send(f"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è, {member.mention}!–¢—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ {guild.name}")
                message_bot = await guild.system_channel.send(f'–í—ã–±–µ—Ä–∏ —Å–≤–æ–π –∫–ª–∞—Å—Å!(–í–æ–∏–Ω, –ø–∞–ª–∞–¥–∏–Ω, –ª—É—á–Ω–∏–∫, —Å—Ç—Ä–µ–ª–æ–∫)')
                for emoji in self.emojis:
                    await message_bot.add_reaction(emoji)
                while not check:
                    reaction, user = await self.bot.wait_for('reaction_add',
                                                             check=lambda reaction, user:
                                                             (reaction.emoji == '‚öî'
                                                              or reaction.emoji == 'üòÄ'
                                                              or reaction.emoji == 'üòÑ'
                                                              or reaction.emoji == 'üòá')
                                                             and user.bot is False)
                    if user_id == user.id:
                        if reaction.emoji == '‚öî':
                            await member.add_roles(self.roles['–í–æ–∏–Ω'])
                        elif reaction.emoji == 'üòÄ':
                            await member.add_roles(self.roles['–ü–∞–ª–∞–¥–∏–Ω'])
                        elif reaction.emoji == 'üòÑ':
                            await member.add_roles(self.roles['–õ—É—á–Ω–∏–∫'])
                        elif reaction.emoji == 'üòá':
                            await member.add_roles(self.roles['–°—Ç—Ä–µ–ª–æ–∫'])
                        await guild.system_channel.purge(limit=50)
                        check = True
                        await guild.system_channel.send('–ñ–¥–µ–º —Ç–µ–±—è –≤ —Ç–∞–≤–µ—Ä–Ω–µ, —Å—Ç—Ä–∞–Ω–Ω–∏–∫!', )

        @self.bot.event
        async def on_member_remove(member):
            guild = member.guild
            if guild.system_channel is not None:
                await guild.system_channel.send(f'–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –Ω–∞—Å –ø–æ–∫–∏–Ω—É–ª {member.mention}! –ù–∞–º –±—É–¥–µ—Ç –Ω–µ —Ö–≤–∞—Ç–∞—Ç—å –µ–≥–æ(')
            InfoOnUsers.delete().where(InfoOnUsers.user_id_discord == member.id).execute()

        @self.bot.command(pass_context=True)
        async def hello(message):
            if await check_to_channel(message):
                return
            await message.channel.send(f'–ü—Ä–∏–≤–µ—Ç, {message.author.mention}!')

        @self.bot.command(pass_context=True)
        async def clear(message):
            await message.channel.purge(limit=50)

        @self.bot.command(pass_context=True)
        async def all_members(message):
            if await check_to_channel(message):
                return
            self.all_members = self.bot.get_all_members()
            await message.channel.send(f'{[member.mention for member in self.all_members]}\n')

        @self.bot.command(pass_context=True)
        async def helped(message):
            if await check_to_channel(message):
                return
            await message.channel.send('–≠—ç—ç—ç')

        @self.bot.command(pass_context=True)
        async def create_db(message):
            if await check_to_channel(message):
                return
            if message.author.id == settings['admin']:
                helmets_data = [{'name': '–®–ª–µ–º –±–æ–º–∂–∞',
                                 'power': 1,
                                 'protection': 1,
                                 'endurance': 1}]
                armours_data = [{'name': '–ë—Ä–æ–Ω—è –±–æ–º–∂–∞',
                                 'power': 1,
                                 'protection': 1,
                                 'endurance': 1}]
                boots_data = [{'name': '–ë–æ—Ç–∏–Ω–∫–∏ –±–æ–º–∂–∞',
                               'power': 1,
                               'protection': 1,
                               'endurance': 1}]
                weapons_data = [{'name': '–ü–∞–ª–∫–∞ –±–æ–º–∂–∞',
                                 'power': 1,
                                 'protection': 1,
                                 'endurance': 1}]
                mobs_data = [{'location': '–ü–æ–¥–≤–∞–ª',
                              'name': '–ö—Ä—ã—Å–∞',
                              'health': 5,
                              'damage': 2,
                              'experience': 10,
                              'money': 2}]
                Helmets.insert_many(helmets_data).execute()
                Armours.insert_many(armours_data).execute()
                Boots.insert_many(boots_data).execute()
                Weapons.insert_many(weapons_data).execute()
                Mobs.insert_many(mobs_data).execute()
                await message.channel.send('–ë–¥ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞')
            else:
                await message.channel.send('–¢—ã –∫–∞–∫ –≤–æ–æ–±—â–µ –æ–± —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ —É–∑–Ω–∞–ª?. –ù—É-–∫–∞ –Ω–∞—Ö–µ—Ä –ø–æ—à–µ–ª –æ—Ç—Å—é–¥–∞!!!')

        @self.bot.command(pass_context=True)
        async def stats(message):
            if await check_to_channel(message):
                return
            try:
                data = InfoOnUsers.get(InfoOnUsers.user_id_discord == message.author.id)
                await message.channel.send(f'{data}')
            except Exception as exc:
                await message.channel.send(f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞! –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –ê–¥–º–∏–Ω—É!\n{exc}')

        @self.bot.command(pass_context=True)
        async def add_all_to_db(message):
            if await check_to_channel(message):
                return
            for user in message.guild.members:
                if user.bot:
                    continue
                else:
                    user_data = [{'name': user.name + user.discriminator,
                                  'user_id_discord': user.id,
                                  'experience': 0,
                                  'money': 10,
                                  'helmet': 1,
                                  'armour': 1,
                                  'boots': 1,
                                  'weapon': 1}]
                    InfoOnUsers.insert_many(user_data).execute()

        @self.bot.command(pass_context=True)
        async def mobs(message):
            user = message.author
            await user.send('–î–∞—Ä–æ–≤–∞! –í–æ—Ç —Å–ø–∏—Å–æ–∫ –º–æ–±–æ–≤ –≤ –¥–∞–Ω–Ω–æ–π –ª–æ–∫–∞—Ü–∏–∏ - ...')


if __name__ == "__main__":
    bot = RpgBot(settings['token'])
    bot.run()
